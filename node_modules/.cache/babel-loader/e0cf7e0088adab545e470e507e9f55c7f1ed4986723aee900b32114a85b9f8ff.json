{"ast":null,"code":"import{useState,useEffect}from'react';import{Routes,Route}from'react-router-dom';import SearchResult from'./components/SearchResult';import SearchBar from'./components/SearchBar';import Movie from'./components/Movie';// List of available movies. IDs are stored as strings to match useParams()\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const availableMovies=[{id:\"1\",title:'The Shawshank Redemption',year:1994},{id:\"2\",title:'The Godfather',year:1972},{id:\"3\",title:'The Dark Knight',year:2008},{id:\"4\",title:'Pulp Fiction',year:1994},{id:\"5\",title:'Forrest Gump',year:1994},{id:\"6\",title:'Inception',year:2010},{id:\"7\",title:'Interstellar',year:2014},{id:\"8\",title:'Parasite',year:2019}];function App(){const[searchTerm,setSearchTerm]=useState(\"\");const[searchedMovie,setSearchedMovie]=useState(\"\");const[loading,setLoading]=useState(false);const[reviews,setReviews]=useState([]);useEffect(()=>{if(!searchTerm){setSearchedMovie(\"\");setLoading(false);return;}setLoading(true);// Debounce for \"smoother\" search\nconst timer=setTimeout(()=>{// Use \"find\" since the API later on only returns one item\nconst searchResult=availableMovies.find(movie=>movie.title.toLowerCase()===searchTerm.toLowerCase());setSearchedMovie(searchResult);setLoading(false);},500);return()=>clearTimeout(timer);},[searchTerm]);return/*#__PURE__*/_jsx(\"div\",{className:\"container mt-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 bg-light-subtle border rounded p-4\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SearchBar,{searchTerm:searchTerm,setSearchTerm:setSearchTerm}),/*#__PURE__*/_jsx(SearchResult,{movie:searchedMovie,loading:loading,searchTerm:searchTerm,setSearchTerm:setSearchTerm})]})}),/*#__PURE__*/_jsx(Route,{path:\"/:id\",element:/*#__PURE__*/_jsx(Movie,{availableMovies:availableMovies,reviews:reviews,setReviews:setReviews})})]})})})});}export default App;","map":{"version":3,"names":["useState","useEffect","Routes","Route","SearchResult","SearchBar","Movie","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","availableMovies","id","title","year","App","searchTerm","setSearchTerm","searchedMovie","setSearchedMovie","loading","setLoading","reviews","setReviews","timer","setTimeout","searchResult","find","movie","toLowerCase","clearTimeout","className","children","path","element"],"sources":["/Users/jesperpersson/Compago/Del 1/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport SearchResult from './components/SearchResult';\nimport SearchBar from './components/SearchBar';\nimport Movie from './components/Movie';\n\n// List of available movies. IDs are stored as strings to match useParams()\nconst availableMovies = [\n  { id: \"1\", title: 'The Shawshank Redemption', year: 1994 },\n  { id: \"2\", title: 'The Godfather', year: 1972 },\n  { id: \"3\", title: 'The Dark Knight', year: 2008 },\n  { id: \"4\", title: 'Pulp Fiction', year: 1994 },\n  { id: \"5\", title: 'Forrest Gump', year: 1994 },\n  { id: \"6\", title: 'Inception', year: 2010 },\n  { id: \"7\", title: 'Interstellar', year: 2014 },\n  { id: \"8\", title: 'Parasite', year: 2019 },\n];\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchedMovie, setSearchedMovie] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState([])\n\n  useEffect(() => {\n    if (!searchTerm) {\n      setSearchedMovie(\"\");\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n\n    // Debounce for \"smoother\" search\n    const timer = setTimeout(() => {\n      // Use \"find\" since the API later on only returns one item\n      const searchResult = availableMovies.find(\n        movie => movie.title.toLowerCase() === searchTerm.toLowerCase()\n      );\n\n      setSearchedMovie(searchResult);\n      setLoading(false);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [searchTerm]);\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-lg-6 bg-light-subtle border rounded p-4\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                  <>\n                    <SearchBar\n                      searchTerm={searchTerm}\n                      setSearchTerm={setSearchTerm}\n                    />\n                    \n                    <SearchResult\n                      movie={searchedMovie}\n                      loading={loading}\n                      searchTerm={searchTerm}\n                      setSearchTerm={setSearchTerm}\n                    />\n                  </>\n              }\n            />\n\n            <Route \n              path=\"/:id\" \n              element={\n                <Movie \n                  availableMovies={availableMovies} \n                  reviews={reviews} \n                  setReviews={setReviews}\n                />\n              } \n            />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}